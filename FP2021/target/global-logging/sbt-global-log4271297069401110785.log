[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kifla\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kifla\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 66.908699ms
[debug]       Load.loadUnit: defsScala took 0.2371ms
[debug] [Loading] Scanning directory C:\Users\kifla\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kifla\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.337301 ms
[debug]           Load.resolveProject(global-plugins) took 37.215499ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kifla\.sbt\1.0\plugins, plugins: List(<none>))) took 67.8823ms
[debug] [Loading] Done in C:\Users\kifla\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 82.9329ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2511ms
[debug]     Load.loadUnit(file:/C:/Users/kifla/.sbt/1.0/plugins/, ...) took 155.6159ms
[debug]   Load.apply: load took 273.4854ms
[debug]   Load.apply: resolveProjects took 4.4144ms
[debug]   Load.apply: finalTransforms took 39.868301ms
[debug]   Load.apply: config.delegates took 5.9894ms
[debug]   Load.apply: Def.make(settings)... took 370.7436ms
[debug]   Load.apply: structureIndex took 83.6236ms
[debug]   Load.apply: mkStreams took 1.2805ms
[info] loading global plugins from C:\Users\kifla\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1955.2047ms
[debug]           Load.loadUnit: plugins took 15.7996ms
[debug]           Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021\project
[debug]             Load.loadUnit: mkEval took 6.6622ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.442 ms
[info] loading settings for project fp2021-build from idea.sbt ...
[debug]               Load.resolveProject(fp2021-build) took 1.7363ms
[debug]             Load.loadTransitive: finalizeProject(Project(id fp2021-build, base: C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021\project, plugins: List(<none>))) took 3.5299ms
[debug] [Loading] Done in C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021\project, returning: (fp2021-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1482.7971ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.5969ms
[debug]         Load.loadUnit(file:/C:/Users/kifla/Documents/v/ETF/master/fp/projekat/FP2021/project/, ...) took 1501.9538ms
[debug]       Load.apply: load took 1502.927301ms
[debug]       Load.apply: resolveProjects took 0.0727ms
[debug]       Load.apply: finalTransforms took 5.561499ms
[debug]       Load.apply: config.delegates took 0.2547ms
[debug]       Load.apply: Def.make(settings)... took 48.2461ms
[debug]       Load.apply: structureIndex took 17.601001ms
[debug]       Load.apply: mkStreams took 0.001699ms
[info] loading project definition from C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3122.5473ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021
[debug]       Load.loadUnit: mkEval took 0.1733ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6005 ms
[info] loading settings for project fp2021 from build.sbt ...
[debug]         Load.resolveProject(fp2021) took 24.0458ms
[debug]       Load.loadTransitive: finalizeProject(Project(id fp2021, base: C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021, plugins: List(<none>))) took 26.570201ms
[debug] [Loading] Done in C:\Users\kifla\Documents\v\ETF\master\fp\projekat\FP2021, returning: (fp2021)
[debug]     Load.loadUnit: loadedProjectsRaw took 713.6068ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.6817ms
[debug]   Load.loadUnit(file:/C:/Users/kifla/Documents/v/ETF/master/fp/projekat/FP2021/, ...) took 3843.385499ms
[debug] Load.apply: load took 3844.708ms
[debug] Load.apply: resolveProjects took 0.0991ms
[debug] Load.apply: finalTransforms took 17.9122ms
[debug] Load.apply: config.delegates took 0.2212ms
[debug] Load.apply: Def.make(settings)... took 42.0277ms
[debug] Load.apply: structureIndex took 12.678101ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to FP2021 (in build file:/C:/Users/kifla/Documents/v/ETF/master/fp/projekat/FP2021/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60679 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60679, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FP2021 (in build file:/C:/Users/kifla/Documents/v/ETF/master/fp/projekat/FP2021/)
[debug] > Exec(idea-shell, None, None)
